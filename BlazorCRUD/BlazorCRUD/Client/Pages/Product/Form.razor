@using BlazorCRUD.Shared;
@inject HttpClient http;


<EditForm Model="@product" OnValidSubmit="@OnValidSubmit">
    <div class="form-group">
        <label>Product Code :</label>
        <div>
            <InputText @bind-Value="@product.ProductCode" class="form-control col-md-4" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label>Product Name:</label>
        <div>
            <InputText @bind-Value="@product.ProductName" class="form-control col-md-4" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label>Price :</label>
        <div>
            <InputNumber @bind-Value="@product.Price" class="form-control col-md-4" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label>Quantity:</label>
        <div>
            <InputNumber @bind-Value="@product.Qty" class="form-control col-md-4" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label> Description :</label>
        <div>
            <InputText @bind-Value="@product.Description" class="form-control col-md-4" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label>Category:</label>
        @if (categoriesList == null)
        {
            <p><em>Loading</em></p>
        }
        else
        {
            <div>
                <select class="form-control col-md-4" @bind="SelectedValue" @bind:after="categoryClick" @bind:event="onchange">

                    <option value="select" disabled="disabled">--Selected--</option>
                    @foreach (var category in categoriesList)
                    {
                        SelectedValue = category.CategoryId;
                        <option value="@category.CategoryId" >@category.CategoryName</option>
                    }
                </select>
            </div>
        }

    </div>
    <br />
    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>

</EditForm>


@code {

    [Parameter] public ProductDTO product { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public string SelectedValue { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    public List<Category> categoriesList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categoriesList = await http.GetFromJsonAsync<List<Category>>("api/Category/getCategories");
    }

    private void categoryClick()
    {
        product.CategoryId = SelectedValue;
        Console.WriteLine(product.CategoryId);
    }
}
